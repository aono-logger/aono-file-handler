// Generated by CoffeeScript 2.3.0
(function() {
  var FileHandler, fs, glob, util;

  fs = require("fs");

  util = require("util");

  glob = util.promisify(require("glob"));

  FileHandler = require("./FileHandler").FileHandler;

  describe("FileHandler", function() {
    var testedHandler;
    testedHandler = null;
    return describe("after creation", function() {
      var prefix;
      prefix = "/tmp/aono-file-handler/test.log";
      beforeEach(function() {
        testedHandler = new FileHandler(prefix);
        return glob(`${prefix}*`).then(function(files) {
          return files.forEach(function(file) {
            return fs.unlinkSync(file);
          });
        });
      });
      it("contains passed parameters", function() {
        return testedHandler.prefix.should.equal(prefix);
      });
      it("contains properly set bytesWritten", function() {
        return testedHandler.bytesWritten.should.equal(0);
      });
      return describe("when after handling log entry", function() {
        var entry;
        entry = {
          timestamp: 0,
          logger: "test",
          level: "good",
          message: "hello, file!",
          meta: {
            number: 1
          }
        };
        beforeEach(function() {
          return testedHandler.handle([entry]);
        });
        it("contains properly set currentFile", function() {
          return testedHandler.currentFile.should.equal(`${prefix}.1970-01-01_00:00:00.000`);
        });
        it("contains properly set bytesWritten", function() {
          return testedHandler.bytesWritten.should.equal(97);
        });
        return it("wrote log entry to a log file", function() {
          var contents;
          contents = fs.readFileSync(testedHandler.currentFile).toString("utf-8");
          return contents.should.equal('{ ' + '"@timestamp": 0, ' + '"logger": "test", ' + '"level": "good", ' + '"message": "hello, file!", ' + '"Â»number": 1' + ' }\n');
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=FileHandler.spec.js.map
