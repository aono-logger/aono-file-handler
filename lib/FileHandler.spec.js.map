{
  "version": 3,
  "file": "FileHandler.spec.js",
  "sourceRoot": "..",
  "sources": [
    "src/FileHandler.spec.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nfs = require \"fs\"\nutil = require \"util\"\nglob = util.promisify require \"glob\"\n\nFileHandler = require \"./FileHandler\"\n  .FileHandler\n\ndescribe \"FileHandler\", ->\n  prefix = \"/tmp/aono-file-handler/test.log\"\n\n  testedHandler = null\n\n  beforeEach ->\n    glob \"#{prefix}*\"\n      .then (files) -> files.forEach (file) -> fs.unlinkSync file\n\n  describe \"after creation\", ->\n    beforeEach ->\n      testedHandler = new FileHandler prefix\n\n    it \"contains passed parameters\", ->\n      testedHandler.prefix.should.equal prefix\n    it \"contains default rotation threshold\", ->\n      testedHandler.rotationBytesThreshold.should.equal 104857600\n\n    it \"contains null currentFile\", ->\n      (should testedHandler.currentFile).equal null\n    it \"contains zeroed currentFileSize\", ->\n      (should testedHandler.currentFileSize).equal null\n    it \"contains zero bytesWritten\", ->\n      testedHandler.bytesWritten.should.equal 0\n\n    describe \"when after handling log entry without meta\", ->\n      entry =\n        timestamp: 0\n        logger: \"test\"\n        level: \"good\"\n        message: \"hello, file!\"\n        meta: {}\n\n      beforeEach ->\n        testedHandler.handle [ entry ]\n\n      it \"contains properly set currentFile\", ->\n        testedHandler.currentFile.should.equal \"#{prefix}.1970-01-01_00:00:00.000\"\n      it \"contains properly set currentFileSize\", ->\n        testedHandler.currentFileSize.should.equal 106\n      it \"contains properly set bytesWritten\", ->\n        testedHandler.bytesWritten.should.equal 106\n\n      it \"wrote log entry to a log file\", ->\n        contents = fs.readFileSync testedHandler.currentFile\n          .toString \"utf-8\"\n        contents.should.equal '{ '+\n          '\"timestamp\": \"1970-01-01T00:00:00.000Z\", '+\n          '\"logger\": \"test\", '+\n          '\"level\": \"good\", '+\n          '\"message\": \"hello, file!\"'+\n        ' }\\n'\n\n    describe \"when after handling log entry with meta\", ->\n      entry =\n        timestamp: 0\n        logger: \"test\"\n        level: \"good\"\n        message: \"hello, file!\"\n        meta:\n          number: 1\n\n      beforeEach ->\n        testedHandler.handle [ entry ]\n\n      it \"contains properly set currentFile\", ->\n        testedHandler.currentFile.should.equal \"#{prefix}.1970-01-01_00:00:00.000\"\n      it \"contains properly set currentFileSize\", ->\n        testedHandler.currentFileSize.should.equal 125\n      it \"contains properly set bytesWritten\", ->\n        testedHandler.bytesWritten.should.equal 125\n\n      it \"wrote log entry to a log file\", ->\n        contents = fs.readFileSync testedHandler.currentFile\n          .toString \"utf-8\"\n        contents.should.equal '{ '+\n          '\"timestamp\": \"1970-01-01T00:00:00.000Z\", '+\n          '\"logger\": \"test\", '+\n          '\"level\": \"good\", '+\n          '\"message\": \"hello, file!\", '+\n          '\"\\\\u00bbnumber\": 1'+\n        ' }\\n'\n\n  describe \"after creation with small rotation threshold\", ->\n    smallThreshold = 16\n\n    beforeEach ->\n      testedHandler = new FileHandler prefix, smallThreshold\n\n    it \"contains properly set rotation threshold\", ->\n      testedHandler.rotationBytesThreshold.should.equal smallThreshold\n\n    describe \"when after handling first log entry\", ->\n      entry0 =\n        timestamp: 0\n        logger: \"test\"\n        level: \"good\"\n        message: \"hello, file!\"\n        meta: {}\n\n      beforeEach ->\n        testedHandler.handle [ entry0 ]\n\n      it \"contains null currentFile\", ->\n        (should testedHandler.currentFile).equal null\n      it \"contains zeroed currentFileSize\", ->\n        (should testedHandler.currentFileSize).equal null\n\n      describe \"and after adding second log entry\", ->\n        entry1 =\n          timestamp: 1\n          logger: \"test\"\n          level: \"bad\"\n          message: \"it's you again\"\n          meta: {}\n\n        beforeEach ->\n          testedHandler.handle [ entry1 ]\n\n        it \"contains null currentFile\", ->\n          (should testedHandler.currentFile).equal null\n        it \"contains zeroed currentFileSize\", ->\n          (should testedHandler.currentFileSize).equal null\n\n        it \"contains properly set bytesWritten\", ->\n          testedHandler.bytesWritten.should.equal 213\n\n        it \"wrote first log entry to first file\", ->\n          contents = fs.readFileSync \"#{prefix}.1970-01-01_00:00:00.000\"\n            .toString \"utf-8\"\n          contents.should.equal '{ '+\n            '\"timestamp\": \"1970-01-01T00:00:00.000Z\", '+\n            '\"logger\": \"test\", '+\n            '\"level\": \"good\", '+\n            '\"message\": \"hello, file!\"'+\n          ' }\\n'\n\n        it \"wrote second log entry to second file\", ->\n          contents = fs.readFileSync \"#{prefix}.1970-01-01_00:00:00.001\"\n            .toString \"utf-8\"\n          contents.should.equal '{ '+\n            '\"timestamp\": \"1970-01-01T00:00:00.001Z\", '+\n            '\"logger\": \"test\", '+\n            '\"level\": \"bad\", '+\n            '\"message\": \"it\\'s you again\"'+\n          ' }\\n'\n\n\n"
  ]
}