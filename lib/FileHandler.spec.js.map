{
  "version": 3,
  "file": "FileHandler.spec.js",
  "sourceRoot": "..",
  "sources": [
    "src/FileHandler.spec.coffee"
  ],
  "names": [],
  "mappings": ";AACA;AAAA,MAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA;;EAAA,EAAA,GAAK,OAAA,CAAQ,IAAR;;EACL,IAAA,GAAO,OAAA,CAAQ,MAAR;;EACP,IAAA,GAAO,IAAI,CAAC,SAAL,CAAe,OAAA,CAAQ,MAAR,CAAf;;EAEP,WAAA,GAAc,OAAA,CAAQ,eAAR,CACZ,CAAC;;EAEH,QAAA,CAAS,aAAT,EAAwB,QAAA,CAAA,CAAA;AACtB,QAAA;IAAA,aAAA,GAAgB;WAEhB,QAAA,CAAS,gBAAT,EAA2B,QAAA,CAAA,CAAA;AACzB,UAAA;MAAA,MAAA,GAAS;MAET,UAAA,CAAW,QAAA,CAAA,CAAA;QACT,aAAA,GAAgB,IAAI,WAAJ,CAAgB,MAAhB;eAChB,IAAA,CAAK,CAAA,CAAA,CAAG,MAAH,CAAU,CAAV,CAAL,CACE,CAAC,IADH,CACQ,QAAA,CAAC,KAAD,CAAA;iBAAW,KAAK,CAAC,OAAN,CAAc,QAAA,CAAC,IAAD,CAAA;mBAAU,EAAE,CAAC,UAAH,CAAc,IAAd;UAAV,CAAd;QAAX,CADR;MAFS,CAAX;MAKA,EAAA,CAAG,4BAAH,EAAiC,QAAA,CAAA,CAAA;eAC/B,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,KAA5B,CAAkC,MAAlC;MAD+B,CAAjC;MAEA,EAAA,CAAG,oCAAH,EAAyC,QAAA,CAAA,CAAA;eACvC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,KAAlC,CAAwC,CAAxC;MADuC,CAAzC;aAGA,QAAA,CAAS,+BAAT,EAA0C,QAAA,CAAA,CAAA;AACxC,YAAA;QAAA,KAAA,GACE;UAAA,SAAA,EAAW,CAAX;UACA,MAAA,EAAQ,MADR;UAEA,KAAA,EAAO,MAFP;UAGA,OAAA,EAAS,cAHT;UAIA,IAAA,EACE;YAAA,MAAA,EAAQ;UAAR;QALF;QAOF,UAAA,CAAW,QAAA,CAAA,CAAA;iBACT,aAAa,CAAC,MAAd,CAAqB,CAAE,KAAF,CAArB;QADS,CAAX;QAGA,EAAA,CAAG,mCAAH,EAAwC,QAAA,CAAA,CAAA;iBACtC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,KAAjC,CAAuC,CAAA,CAAA,CAAG,MAAH,CAAU,wBAAV,CAAvC;QADsC,CAAxC;QAGA,EAAA,CAAG,oCAAH,EAAyC,QAAA,CAAA,CAAA;iBACvC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,KAAlC,CAAwC,EAAxC;QADuC,CAAzC;eAGA,EAAA,CAAG,+BAAH,EAAoC,QAAA,CAAA,CAAA;AAClC,cAAA;UAAA,QAAA,GAAW,EAAE,CAAC,YAAH,CAAgB,aAAa,CAAC,WAA9B,CACT,CAAC,QADQ,CACC,OADD;iBAEX,QAAQ,CAAC,MAAM,CAAC,KAAhB,CAAsB,IAAA,GACpB,mBADoB,GAEpB,oBAFoB,GAGpB,mBAHoB,GAIpB,6BAJoB,GAKpB,cALoB,GAMtB,MANA;QAHkC,CAApC;MAlBwC,CAA1C;IAbyB,CAA3B;EAHsB,CAAxB;AAPA",
  "sourcesContent": [
    "\nfs = require \"fs\"\nutil = require \"util\"\nglob = util.promisify require \"glob\"\n\nFileHandler = require \"./FileHandler\"\n  .FileHandler\n\ndescribe \"FileHandler\", ->\n  testedHandler = null\n\n  describe \"after creation\", ->\n    prefix = \"/tmp/aono-file-handler/test.log\"\n\n    beforeEach ->\n      testedHandler = new FileHandler prefix\n      glob \"#{prefix}*\"\n        .then (files) -> files.forEach (file) -> fs.unlinkSync file\n\n    it \"contains passed parameters\", ->\n      testedHandler.prefix.should.equal prefix\n    it \"contains properly set bytesWritten\", ->\n      testedHandler.bytesWritten.should.equal 0\n\n    describe \"when after handling log entry\", ->\n      entry =\n        timestamp: 0\n        logger: \"test\"\n        level: \"good\"\n        message: \"hello, file!\"\n        meta:\n          number: 1\n\n      beforeEach ->\n        testedHandler.handle [ entry ]\n\n      it \"contains properly set currentFile\", ->\n        testedHandler.currentFile.should.equal \"#{prefix}.1970-01-01_00:00:00.000\"\n\n      it \"contains properly set bytesWritten\", ->\n        testedHandler.bytesWritten.should.equal 97\n\n      it \"wrote log entry to a log file\", ->\n        contents = fs.readFileSync testedHandler.currentFile\n          .toString \"utf-8\"\n        contents.should.equal '{ '+\n          '\"@timestamp\": 0, '+\n          '\"logger\": \"test\", '+\n          '\"level\": \"good\", '+\n          '\"message\": \"hello, file!\", '+\n          '\"Â»number\": 1'+\n        ' }\\n'\n\n"
  ]
}